**1.2.5**

1.  **How many rows are in `penguins`? How many columns?\
    **344 sor, 8 oszlop

    ```{r}
    nrow(penguins)
    ncol(penguins)
    ```

2.  **What does the `bill_depth_mm` variable in the `penguins` data frame describe?**\
    csőr mélysége mm-ben megadva

    ```{r}
    ?penguins
    ```

3.  **Make a scatterplot of `bill_depth_mm` vs. `bill_length_mm`. That is, make a scatterplot with `bill_depth_mm` on the y-axis and `bill_length_mm` on the x-axis. Describe the relationship between these two variables.**

    gyenge/nincs korreláció

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x = bill_length_mm, y = bill_depth_mm)
    ) +
      geom_point() +
      labs(
        title = "bill depth vs. bill length",
          x = "bill length",
          y = "bill depth"
      )
    ```

4.  **What happens if you make a scatterplot of `species` vs. `bill_depth_mm`? What might be a better choice of geom?**

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x = species, y = bill_depth_mm)
    ) +
      geom_point(aes(color = species)) +
      labs(
        title = "species vs. bill depth",
        x = "species",
        y = "bill depth (mm)",
        color = "Species"
      )
    ```

    scatterplot helyett boxplot:

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes (x = species, y = bill_depth_mm)
    ) + geom_boxplot(aes(fill = species)) +
      labs(
    title = "species vs. bill depth",
    x = "species",
    y = "bill depth (mm)"
      )
    ```

5.  **Why does the following give an error and how would you fix it?**

    ```         
    ggplot(data = penguins) +
    geom_point()
    ```

    nincs mapping/nincs megadva az x és az y

    ```{r}
    ggplot(data = penguins,
    mapping = aes (x = body_mass_g, y = bill_length_mm)) +
      geom_point()
    ```

6.  **What does the `na.rm` argument do in `geom_point()`? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to `TRUE`.**

    figyelmen kívül hagyja a hiányzó értékeket\
    alapértelmezés: FALSE -\> figyelmeztetéssel hagyja figyelmen kívül a hiányzó értékeket

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x =species, y = bill_depth_mm)
    ) +
      geom_point(
    aes(color = species),
    na.rm = TRUE) +
      labs(
    title = "species vs. bill depth",
    x = "species",
    y = "bill depth (mm)",
    color = "Species"
      )
    ```

7.  **Add the following caption to the plot you made in the previous exercise: “Data come from the palmerpenguins package.”**

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x =species, y = bill_depth_mm)
    ) +
      geom_point(
      aes(color = species),
      na.rm = TRUE) +
      labs(
      title = "species vs. bill depth",
      x = "species",
      y = "bill depth (mm)",
      color = "Species",
      caption = "Data come from the palmerpenguins package."
    )
    ```

8.  **Recreate the following visualization. What aesthetic should `bill_depth_mm` be mapped to? And should it be mapped at the global level or at the geom level?**

    csak a point geomhoz, mert csak a scatterplot színei egyeznek a bill depth színeivel

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x = flipper_length_mm, y = body_mass_g)
    ) +
    geom_point(
    aes(color = bill_depth_mm)
    ) +
    geom_smooth()
    ```

9.  **Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.**

    flipper length vs. body mass scatterplot lesz, a pontok és a görbék színei az island változó alapján lesznek csoportosítva, a görbékhez nem tartozik hibasáv

    ```{r}
    ggplot(   
    data = penguins,
    mapping = aes(x = flipper_length_mm, y = body_mass_g, color = island)
    ) +   
    geom_point() +   
    geom_smooth(se = FALSE)
    ```

10. **Will these two graphs look different? Why/why not?**

    ugyanúgy fognak kinézni, mert ugyanazokat az adatokat és vizuális elemeket tartalmazza a kód, az a különbség, hogy az elsőben globális szinten vannak meghatározva, a másodikban pedig mindkét geom szintjén külön

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(x = flipper_length_mm, y = body_mass_g)
    ) +
      geom_point() +
      geom_smooth()
    ```

    ```{r}
    ggplot() +
      geom_point(
    data = penguins,
    mapping = aes(x = flipper_length_mm, y = body_mass_g)
      ) +
      geom_smooth(
    data = penguins,
    mapping = aes(x = flipper_length_mm, y = body_mass_g)
      )
    ```

**1.4.3**

1.  **Make a bar plot of `species` of `penguins`, where you assign `species` to the `y` aesthetic. How is this plot different?**

    a sávok vízszintesek

    ```{r}
    ggplot(penguins, aes(y = species)) +
      geom_bar()
    ```

2.  **How are the following two plots different? Which aesthetic, `color` or `fill`, is more useful for changing the color of bars?**

    a color csak a körvonalakat színezi át, a fill teljesen megváltoztatja a színt, ez hasznosabb, mivel jobban látható

    ```{r}
    ggplot(penguins, aes(x = species)) +
      geom_bar(color = "red")
    ```

    ```{r}
    ggplot(penguins, aes(x = species)) +
      geom_bar(fill = "red")
    ```

3.  **What does the `bins` argument in `geom_histogram()` do?**

    meghatározza a binek számát, alapból 30

4.  **Make a histogram of the carat variable in the diamonds dataset that is available when you load the tidyverse package. Experiment with different binwidths. What binwidth reveals the most interesting patterns?**

    kisebb binwidth -\> több részletet mutat\
    nagyobb binwidth -\> általánosabb

    ```{r}
    ggplot(diamonds, aes(x = carat)) +
      geom_histogram(binwidth = 1)
    ```

    ```{r}
    ggplot(diamonds, aes(x = carat)) +
      geom_histogram(binwidth = 0.3)
    ```

    ```{r}
    ggplot(diamonds, aes(x = carat)) +
      geom_histogram(binwidth = 0.01)
    ```

**1.5.5**

1.  **The mpg data frame that is bundled with the ggplot2 package contains 234 observations collected by the US Environmental Protection Agency on 38 car models. Which variables in mpg are categorical? Which variables are numerical? How can you see this information when you run mpg?**

    kategorikus: manufacturer, model, trans, drv, fl, class\
    numerikus: displ, year, cyl, cty, hwy

    ```{r}
    ?mpg
    ```

2.  **Make a scatterplot of `hwy` vs. `displ` using the `mpg` data frame. Next, map a third, numerical variable to `color`, then `size`, then both `color` and `size`, then `shape`. How do these aesthetics behave differently for categorical vs. numerical variables?**

    numerikus változók nem használhatók a shape-hez

    ```{r}
    ggplot(mpg, aes(x = hwy, y = displ)) +
      geom_point()
    ```

    ```{r}
    ggplot(mpg, aes(x = hwy, y = displ, color = year)) +
      geom_point()
    ```

    ```{r}
    ggplot(mpg, aes(x = hwy, y = displ, color = year, size = year)) +
          geom_point()
    ```

    ```{r}
    ggplot(mpg, aes(x = hwy, y = displ, shape = drv)) +
      geom_point()
    ```

3.  **In the scatterplot of `hwy` vs. `displ`, what happens if you map a third variable to `linewidth`?**

    nem történik semmi, mert nincs vonal aminek a vastagságát módosítani lehetne

    ```{r}
    ggplot(mpg, aes(x = hwy, y = displ, linewidth = year)) +
      geom_point()
    ```

4.  **What happens if you map the same variable to multiple aesthetics?**

    nem lesz használható a plot

    ```{r}
    ggplot(mpg, aes(x = hwy, y = hwy, color = hwy, size = hwy)) +
      geom_point()
    ```

5.  **Make a scatterplot of `bill_depth_mm` vs. `bill_length_mm` and color the points by `species`. What does adding coloring by species reveal about the relationship between these two variables? What about faceting by `species`?**

    szín hozzáadása: változók közötti különbségek\
    az adelie pingvineknek átalában nagyobb a csőrmélysége, chinstrap pingvineknél nagyobb a csőr hossza, gentoo pingvineknél a legkisebb a csőrmélység, a csőr hossza nagyobb, mint az adelie pingvineknél

    ```{r}
    ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
      geom_point()
    ```

    facet: külön diagramok faj alapján, könnyebben összehasonlíthatók

    ```{r}
    ggplot(penguins, aes( x = bill_depth_mm, y = bill_length_mm)) +
      geom_point() +
      facet_wrap(~species)
    ```

6.  **Why does the following yield two separate legends? How would you fix it to combine the two legends?**

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(
    x = bill_length_mm, y = bill_depth_mm, 
    color = species, shape = species
      )
    ) +
      geom_point() +
      labs(color = "Species")
    ```

    a labs átnevezi a colort Speciesre, a shape-t viszont nem -\> shape és color átnevezése Speciesre

    ```{r}
    ggplot(
      data = penguins,
      mapping = aes(
    x = bill_length_mm, y = bill_depth_mm, 
    color = species, shape = species
      )
    ) +
      geom_point() +
      labs(color = "Species", shape = "Species")
    ```

7.  **Create the two following stacked bar plots. Which question can you answer with the first one? Which question can you answer with the second one?**

    adott szigeten hogyan oszlanak el az egyes fajok:

    ```{r}
    ggplot(penguins, aes(x = island, fill = species)) +
      geom_bar(position = "fill")
    ```

    fajok élőhelyeinek eloszlása:

    ```{r}
    ggplot(penguins, aes(x = species, fill = island)) +
      geom_bar(position = "fill")
    ```

**1.6.1**

1.  **Run the following lines of code. Which of the two plots is saved as `mpg-plot.png`? Why?**

    a második plot lesz mentve, mert a ggsave alapból a legutolsó plotot menti le

    ```{r}
    ggplot(mpg, aes(x = class)) +
      geom_bar()
    ggplot(mpg, aes(x = cty, y = hwy)) +
      geom_point()
    ggsave("mpg-plot.png")
    ```

2.  **What do you need to change in the code above to save the plot as a PDF instead of a PNG? How could you find out what types of image files would work in `ggsave()`?**

    ```{r}
    ggplot(mpg, aes(x = cty, y = hwy)) +
      geom_point()
    ggsave("mpg-plot.pdf")
    ```

    ```{r}
    ?ggsave
    ```
